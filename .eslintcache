[{"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\index.tsx":"1","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\App.tsx":"2","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\ColorSelector.tsx":"3","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\reducer.ts":"4","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\Autocomplete.tsx":"5","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\SavedColorsList.tsx":"6","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\Box.tsx":"7","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\SaveColor.tsx":"8","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\helpers\\boxColorsList.ts":"9"},{"size":197,"mtime":1612720914330,"results":"10","hashOfConfig":"11"},{"size":224,"mtime":1612720911821,"results":"12","hashOfConfig":"11"},{"size":1103,"mtime":1612723987021,"results":"13","hashOfConfig":"11"},{"size":1711,"mtime":1612723704730,"results":"14","hashOfConfig":"11"},{"size":1140,"mtime":1612723836793,"results":"15","hashOfConfig":"11"},{"size":795,"mtime":1612720908947,"results":"16","hashOfConfig":"11"},{"size":655,"mtime":1612649298911,"results":"17","hashOfConfig":"11"},{"size":360,"mtime":1612723656136,"results":"18","hashOfConfig":"11"},{"size":2229,"mtime":1612649298980,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ord62b",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\index.tsx",[],["41","42"],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\App.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\ColorSelector.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\reducer.ts",["43"],"import { State, ActionType } from './types';\nimport { boxColorsList } from './helpers/boxColorsList';\n\nexport const reducer = (state: State, action: ActionType) => {\n  switch (action.type) {\n    case 'INIT':\n      return {\n        ...state,\n        boxColorsList: boxColorsList,\n      };\n    case 'CHANGE_BOX_COLOR':\n      let boxColor = '';\n      if (boxColorsList.includes(action.payload.toLocaleLowerCase())) {\n        boxColor = action.payload;\n      }\n      return {\n        ...state,\n        typedColor: action.payload,\n        boxColor: boxColor,\n        results:\n          action.payload && !boxColor\n            ? boxColorsList.filter((color) =>\n                color.startsWith(action.payload.toLowerCase())\n              )\n            : [],\n        error: '',\n      };\n    case 'SAVE_COLOR':\n      if (!state.boxColor) {\n        return {\n          ...state,\n          error: 'Chose color',\n        };\n      }\n      if (state.savedColors.includes(state.boxColor)) {\n        return {\n          ...state,\n          error: 'This color is already saved.',\n        };\n      }\n      let savedColors;\n      if (state.savedColors.length < 10) {\n        savedColors = [state.boxColor, ...state.savedColors];\n      } else {\n        state.savedColors.pop();\n        savedColors = [state.boxColor, ...state.savedColors];\n      }\n      return {\n        ...state,\n        savedColors: savedColors,\n      };\n\n    case 'CHOSE_COLOR':\n      return {\n        ...state,\n        typedColor: action.payload,\n        boxColor: action.payload,\n        results: [],\n      };\n  }\n};\n\nexport const initialState: State = {\n  typedColor: '',\n  boxColor: '',\n  boxColorsList: [],\n  savedColors: [],\n  results: [],\n  error: '',\n};\n","C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\Autocomplete.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\SavedColorsList.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\Box.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\components\\SaveColor.tsx",[],"C:\\Users\\rfkap\\CSS_COLORS_SELECTOR\\src\\helpers\\boxColorsList.ts",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":20,"column":17,"nodeType":null,"endLine":25,"endColumn":12,"fix":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"prettier/prettier","Replace `⏎··········action.payload·&&·!boxColor⏎············?·boxColorsList.filter((color)·=>⏎················color.startsWith(action.payload.toLowerCase())⏎··············)⏎···········` with `·action.payload·&&·!boxColor·?·boxColorsList.filter((color)·=>·color.startsWith(action.payload.toLowerCase()))`",{"range":"57","text":"58"},["55"],["56"],"no-global-assign","no-unsafe-negation",[570,745]," action.payload && !boxColor ? boxColorsList.filter((color) => color.startsWith(action.payload.toLowerCase()))"]